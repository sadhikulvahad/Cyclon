<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <style>
        .custom-date {
            display: none;
        }

        .custom-date.show {
            display: block;
        }

        #salesTable {
            display: none;
        }

        @media (max-width: 768px) {
            .col-md-3 {
                margin-bottom: 10px;
            }
        }
    </style>
</head>

<body>
    {{> admin/header}}
    <div class="container mt-4">
        <h1 class="mb-4">Sales Report</h1>
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Total Orders</h5>
                        <p id="totalOrders" class="card-text">{{totalOrders}}</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Total Revenue</h5>
                        <p id="totalRevenue" class="card-text">₹{{totalRevenue}}</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-3">
                <select id="filterType" class="form-select">
                    <option value="daily">Daily</option>
                    <option value="weekly">Weekly</option>
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option>
                    <option value="custom">Custom</option>
                </select>
            </div>
            <div class="col-md-3 custom-date">
                <input type="date" id="startDate" class="form-control" placeholder="Start Date">
            </div>
            <div class="col-md-3 custom-date">
                <input type="date" id="endDate" class="form-control" placeholder="End Date">
            </div>
            <div class="col-md-3">
                <button id="applyFilter" class="btn btn-primary">Apply Filter</button>
            </div>
        </div>

        <div class="d-flex justify-content-end mt-3">
            <button id="downloadPdf" class="btn btn-danger me-2">Download PDF</button>
            <button id="downloadExcel" class="btn btn-success">Download Excel</button>
        </div>

        <table id="salesTable" class="table table-striped">
            <thead>
                <tr>
                    <th>Order Id</th>
                    <th>Username</th>
                    <th>Total Amount</th>
                    {{!-- <th>Discount</th> --}}
                    <th>Final Amount</th>
                    <th>Status</th>
                    <th>Payment Method</th>
                    <th>Created At</th>
                </tr>
            </thead>
            <tbody id="salesTableBody">
                {{#each orders}}
                <tr>
                    <td>{{increment @index}}</td>
                    <td>{{userId.name}}</td>
                    <td>₹{{totalPrice}}</td>
                    {{!-- <td>₹{{discount}}</td> --}}
                    <td>₹{{finalPrice}}</td>
                    <td>{{status}}</td>
                    <td>{{paymentMethod}}</td>
                    <td>{{formatDate createdOn}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterType = document.getElementById('filterType');
            const applyFilter = document.getElementById('applyFilter');
            const salesTable = document.getElementById('salesTable');
            const salesTableBody = document.getElementById('salesTableBody');
            const totalOrders = document.getElementById('totalOrders');
            const totalRevenue = document.getElementById('totalRevenue');
            const customDateFields = document.querySelectorAll('.custom-date');

            // Show/Hide date fields based on filter type
            filterType.addEventListener('change', function () {
                if (filterType.value === 'custom') {
                    customDateFields.forEach(field => field.classList.add('show'));
                } else {
                    customDateFields.forEach(field => field.classList.remove('show'));
                }
            });

            // Fetch data when Apply Filter is clicked
            applyFilter.addEventListener('click', function () {
                const selectedFilter = filterType.value;
                let startDate = '';
                let endDate = '';

                // If the selected filter is custom, get startDate and endDate
                if (selectedFilter === 'custom') {
                    startDate = document.getElementById('startDate').value;
                    endDate = document.getElementById('endDate').value;

                    // Ensure both dates are selected
                    if (!startDate || !endDate) {
                        alert('Please select both start and end dates for custom filter.');
                        return;
                    }
                }

                // Fetch sales data based on the selected filter
                fetch('/admin/salesReport', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        filterType: selectedFilter,
                        startDate: startDate,
                        endDate: endDate
                    })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to fetch sales data');
                        }
                        return response.json();
                    })
                    .then(data => {
                        salesTable.style.display = 'table';

                        // Clear table
                        salesTableBody.innerHTML = '';

                        // Update total orders and revenue
                        totalOrders.textContent = data.totalOrders;
                        totalRevenue.textContent = `₹${data.totalRevenue}`;

                        // Populate table with filtered data
                        data.orders.forEach((order, index) => {
                            const row = `<tr>
                            <td>${index + 1}</td>
                            <td>${order.userId.name}</td>
                            <td>₹${order.totalPrice}</td>
                            <td>₹${order.finalPrice}</td>
                            <td>${order.status}</td>
                            <td>${order.paymentMethod}</td>
                            <td>${order.createdOn}</td>
                        </tr>`;
                            salesTableBody.insertAdjacentHTML('beforeend', row);
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while fetching the sales report');
                    });
            });
        });
    </script>
</body>

</html>